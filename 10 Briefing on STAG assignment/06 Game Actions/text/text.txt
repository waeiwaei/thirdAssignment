In addition to the standard "built-in" commands (e.g. `get`, `goto`, `look` etc.), your game engine should also
respond to any of a number of game-specific commands (as specified in the "actions" file).
Each of these **actions** will have the following elements:

- One or more possible **trigger** phrases (ANY of which can be used to initiate the action)
- One or more **subject** entities that are acted upon (ALL of which need to be available to perform the action)
- An optional set of **consumed** entities that are all removed ("eaten up") by the action
- An optional set of **produced** entities that are all created ("generated") by the action
- A **narration** that provides a human-readable explanation of what happened when the action is performed

Note that being "available" requires the entity to _either_ be in the inventory of the player invoking the action
_or_ for that entity to be in the room/location where the action is being performed. This feature is
intended to be a shortcut so that a player can use an entity in their location without having to explicitly pick it up first.
Additionally, subjects of an action can be locations, characters or furniture (which can't be picked up).

It is worth noting that action trigger keyphrases are NOT unique - for example there may be multiple "open" actions that
act on different entities. Note that trigger phrases cannot (and will not) contain the names of entities,
since this would make incoming commands far too difficult to parse. Just consider the challenge of trying to
interpret the command: `lock lock with key`.

Upon receiving an action command, your server should attempt to find an appropriate matching action.
Note that the action is only valid if ALL **subject** entities (as specified in the actions file) are available to the player.
If a valid action is found, your server must undertake the relevant additions/removals (production/consumption).

When an entity is _produced_, it should be moved from its current location in the game (which might be in the `storeroom`)
to the location in which the action was trigged. The entity should NOT automatically appear in a players inventory -
it might be furniture (which the player can't carry) or it might be an artefact they don't actually want to pick up !

When an entity is _consumed_ it should be removed from its current location (which could be any location within the game)
moved into the `storeroom` location. If the game writer wants to enforce co-location (i.e. the consumed entity must be
in the same location as the player) then they must include that entity as a subject of the action.

Note that it is NOT possible to perform an action where a subject, or a consumed or produced entity is currently in
_another_ player's inventory. You should consider these entities "out of bounds" and not available to a player who does not
currently hold that artefact. You can't unlock a door if another player has the key !

Locations can be used as subjects, consumed and produced entities of an action (just like other entities).
Consumed locations however are not moved to the storeroom - instead, the path between the current location and consumed location is removed
(there may still be other paths to that location in other game locations). For produced locations, a new (one-way) path is added from the
current location to the "produced" location.
